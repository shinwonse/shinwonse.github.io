current directory: /Users/wonse/Downloads/hydejack-starter-kit-9.1.6/vendor/bundle/ruby/2.7.0/gems/posix-spawn-0.3.15/ext
/Users/wonse/.rbenv/versions/2.7.2/bin/ruby -I /Users/wonse/.rbenv/versions/2.7.2/lib/ruby/2.7.0 -r ./siteconf20220321-13832-jfyx00.rb extconf.rb
creating Makefile

current directory: /Users/wonse/Downloads/hydejack-starter-kit-9.1.6/vendor/bundle/ruby/2.7.0/gems/posix-spawn-0.3.15/ext
make "DESTDIR=" clean

current directory: /Users/wonse/Downloads/hydejack-starter-kit-9.1.6/vendor/bundle/ruby/2.7.0/gems/posix-spawn-0.3.15/ext
make "DESTDIR="
compiling posix-spawn.c
posix-spawn.c:69:28: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
                        if      (SYM2ID(obj) == rb_intern("in"))   fd = 0;
                                                ^~~~~~~~~~~~~~~
/Users/wonse/.rbenv/versions/2.7.2/include/ruby-2.7.0/ruby/ruby.h:1847:23: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                      ^
posix-spawn.c:69:28: note: '{' token is here
                        if      (SYM2ID(obj) == rb_intern("in"))   fd = 0;
                                                ^~~~~~~~~~~~~~~
/Users/wonse/.rbenv/versions/2.7.2/include/ruby-2.7.0/ruby/ruby.h:1847:24: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/wonse/.rbenv/versions/2.7.2/include/ruby-2.7.0/ruby/ruby.h:1832:5: note: expanded from macro 'RUBY_CONST_ID_CACHE'
    {                                                   \
    ^
posix-spawn.c:69:28: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
                        if      (SYM2ID(obj) == rb_intern("in"))   fd = 0;
                                                ^~~~~~~~~~~~~~~
/Users/wonse/.rbenv/versions/2.7.2/include/ruby-2.7.0/ruby/ruby.h:1847:24: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/wonse/.rbenv/versions/2.7.2/include/ruby-2.7.0/ruby/ruby.h:1837:5: note: expanded from macro 'RUBY_CONST_ID_CACHE'
    }
    ^
posix-spawn.c:69:28: note: ')' token is here
                        if      (SYM2ID(obj) == rb_intern("in"))   fd = 0;
                                                ^~~~~~~~~~~~~~~
/Users/wonse/.rbenv/versions/2.7.2/include/ruby-2.7.0/ruby/ruby.h:1847:56: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                                                       ^
posix-spawn.c:70:28: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
                        else if (SYM2ID(obj) == rb_intern("out"))  fd = 1;
                                                ^~~~~~~~~~~~~~~~
/Users/wonse/.rbenv/versions/2.7.2/include/ruby-2.7.0/ruby/ruby.h:1847:23: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                      ^
posix-spawn.c:70:28: note: '{' token is here
                        else if (SYM2ID(obj) == rb_intern("out"))  fd = 1;
                                                ^~~~~~~~~~~~~~~~
/Users/wonse/.rbenv/versions/2.7.2/include/ruby-2.7.0/ruby/ruby.h:1847:24: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/wonse/.rbenv/versions/2.7.2/include/ruby-2.7.0/ruby/ruby.h:1832:5: note: expanded from macro 'RUBY_CONST_ID_CACHE'
    {                                                   \
    ^
posix-spawn.c:70:28: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
                        else if (SYM2ID(obj) == rb_intern("out"))  fd = 1;
                                                ^~~~~~~~~~~~~~~~
/Users/wonse/.rbenv/versions/2.7.2/include/ruby-2.7.0/ruby/ruby.h:1847:24: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/wonse/.rbenv/versions/2.7.2/include/ruby-2.7.0/ruby/ruby.h:1837:5: note: expanded from macro 'RUBY_CONST_ID_CACHE'
    }
    ^
posix-spawn.c:70:28: note: ')' token is here
                        else if (SYM2ID(obj) == rb_intern("out"))  fd = 1;
                                                ^~~~~~~~~~~~~~~~
/Users/wonse/.rbenv/versions/2.7.2/include/ruby-2.7.0/ruby/ruby.h:1847:56: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                                                       ^
posix-spawn.c:71:28: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
                        else if (SYM2ID(obj) == rb_intern("err"))  fd = 2;
                                                ^~~~~~~~~~~~~~~~
/Users/wonse/.rbenv/versions/2.7.2/include/ruby-2.7.0/ruby/ruby.h:1847:23: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                      ^
posix-spawn.c:71:28: note: '{' token is here
                        else if (SYM2ID(obj) == rb_intern("err"))  fd = 2;
                                                ^~~~~~~~~~~~~~~~
/Users/wonse/.rbenv/versions/2.7.2/include/ruby-2.7.0/ruby/ruby.h:1847:24: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/wonse/.rbenv/versions/2.7.2/include/ruby-2.7.0/ruby/ruby.h:1832:5: note: expanded from macro 'RUBY_CONST_ID_CACHE'
    {                                                   \
    ^
posix-spawn.c:71:28: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
                        else if (SYM2ID(obj) == rb_intern("err"))  fd = 2;
                                                ^~~~~~~~~~~~~~~~
/Users/wonse/.rbenv/versions/2.7.2/include/ruby-2.7.0/ruby/ruby.h:1847:24: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/wonse/.rbenv/versions/2.7.2/include/ruby-2.7.0/ruby/ruby.h:1837:5: note: expanded from macro 'RUBY_CONST_ID_CACHE'
    }
    ^
posix-spawn.c:71:28: note: ')' token is here
                        else if (SYM2ID(obj) == rb_intern("err"))  fd = 2;
                                                ^~~~~~~~~~~~~~~~
/Users/wonse/.rbenv/versions/2.7.2/include/ruby-2.7.0/ruby/ruby.h:1847:56: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                                                       ^
posix-spawn.c:76:27: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
                        if (rb_respond_to(obj, rb_intern("posix_fileno"))) {
                                               ^~~~~~~~~~~~~~~~~~~~~~~~~
/Users/wonse/.rbenv/versions/2.7.2/include/ruby-2.7.0/ruby/ruby.h:1847:23: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                      ^
posix-spawn.c:76:27: note: '{' token is here
                        if (rb_respond_to(obj, rb_intern("posix_fileno"))) {
                                               ^~~~~~~~~~~~~~~~~~~~~~~~~
/Users/wonse/.rbenv/versions/2.7.2/include/ruby-2.7.0/ruby/ruby.h:1847:24: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/wonse/.rbenv/versions/2.7.2/include/ruby-2.7.0/ruby/ruby.h:1832:5: note: expanded from macro 'RUBY_CONST_ID_CACHE'
    {                                                   \
    ^
posix-spawn.c:76:27: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
                        if (rb_respond_to(obj, rb_intern("posix_fileno"))) {
                                               ^~~~~~~~~~~~~~~~~~~~~~~~~
/Users/wonse/.rbenv/versions/2.7.2/include/ruby-2.7.0/ruby/ruby.h:1847:24: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/wonse/.rbenv/versions/2.7.2/include/ruby-2.7.0/ruby/ruby.h:1837:5: note: expanded from macro 'RUBY_CONST_ID_CACHE'
    }
    ^
posix-spawn.c:76:27: note: ')' token is here
                        if (rb_respond_to(obj, rb_intern("posix_fileno"))) {
                                               ^~~~~~~~~~~~~~~~~~~~~~~~~
/Users/wonse/.rbenv/versions/2.7.2/include/ruby-2.7.0/ruby/ruby.h:1847:56: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                                                       ^
posix-spawn.c:77:34: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
                                fd = FIX2INT(rb_funcall(obj, rb_intern("posix_fileno"), 0));
                                                             ^~~~~~~~~~~~~~~~~~~~~~~~~
/Users/wonse/.rbenv/versions/2.7.2/include/ruby-2.7.0/ruby/ruby.h:1847:23: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                      ^
/Users/wonse/.rbenv/versions/2.7.2/include/ruby-2.7.0/ruby/ruby.h:2689:27: note: expanded from macro 'rb_funcall'
        rb_funcallv(recv, mid, \
                          ^~~
/Users/wonse/.rbenv/versions/2.7.2/include/ruby-2.7.0/ruby/ruby.h:717:32: note: expanded from macro 'FIX2INT'
#define FIX2INT(x)  RB_FIX2INT(x)
                               ^
/Users/wonse/.rbenv/versions/2.7.2/include/ruby-2.7.0/ruby/ruby.h:693:48: note: expanded from macro 'RB_FIX2INT'
#define RB_FIX2INT(x) ((int)rb_fix2int((VALUE)(x)))
                                               ^
posix-spawn.c:77:34: note: '{' token is here
                                fd = FIX2INT(rb_funcall(obj, rb_intern("posix_fileno"), 0));
                                                             ^~~~~~~~~~~~~~~~~~~~~~~~~
/Users/wonse/.rbenv/versions/2.7.2/include/ruby-2.7.0/ruby/ruby.h:1847:24: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/wonse/.rbenv/versions/2.7.2/include/ruby-2.7.0/ruby/ruby.h:1832:5: note: expanded from macro 'RUBY_CONST_ID_CACHE'
    {                                                   \
    ^
/Users/wonse/.rbenv/versions/2.7.2/include/ruby-2.7.0/ruby/ruby.h:2689:27: note: expanded from macro 'rb_funcall'
        rb_funcallv(recv, mid, \
                          ^~~
/Users/wonse/.rbenv/versions/2.7.2/include/ruby-2.7.0/ruby/ruby.h:717:32: note: expanded from macro 'FIX2INT'
#define FIX2INT(x)  RB_FIX2INT(x)
                               ^
/Users/wonse/.rbenv/versions/2.7.2/include/ruby-2.7.0/ruby/ruby.h:693:48: note: expanded from macro 'RB_FIX2INT'
#define RB_FIX2INT(x) ((int)rb_fix2int((VALUE)(x)))
                                               ^
posix-spawn.c:77:34: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
                                fd = FIX2INT(rb_funcall(obj, rb_intern("posix_fileno"), 0));
                                                             ^~~~~~~~~~~~~~~~~~~~~~~~~
/Users/wonse/.rbenv/versions/2.7.2/include/ruby-2.7.0/ruby/ruby.h:1847:24: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/wonse/.rbenv/versions/2.7.2/include/ruby-2.7.0/ruby/ruby.h:1837:5: note: expanded from macro 'RUBY_CONST_ID_CACHE'
    }
    ^
/Users/wonse/.rbenv/versions/2.7.2/include/ruby-2.7.0/ruby/ruby.h:2689:27: note: expanded from macro 'rb_funcall'
        rb_funcallv(recv, mid, \
                          ^~~
/Users/wonse/.rbenv/versions/2.7.2/include/ruby-2.7.0/ruby/ruby.h:717:32: note: expanded from macro 'FIX2INT'
#define FIX2INT(x)  RB_FIX2INT(x)
                               ^
/Users/wonse/.rbenv/versions/2.7.2/include/ruby-2.7.0/ruby/ruby.h:693:48: note: expanded from macro 'RB_FIX2INT'
#define RB_FIX2INT(x) ((int)rb_fix2int((VALUE)(x)))
                                               ^
posix-spawn.c:77:34: note: ')' token is here
                                fd = FIX2INT(rb_funcall(obj, rb_intern("posix_fileno"), 0));
                                                             ^~~~~~~~~~~~~~~~~~~~~~~~~
/Users/wonse/.rbenv/versions/2.7.2/include/ruby-2.7.0/ruby/ruby.h:1847:56: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                                                       ^
/Users/wonse/.rbenv/versions/2.7.2/include/ruby-2.7.0/ruby/ruby.h:2689:27: note: expanded from macro 'rb_funcall'
        rb_funcallv(recv, mid, \
                          ^~~
/Users/wonse/.rbenv/versions/2.7.2/include/ruby-2.7.0/ruby/ruby.h:717:32: note: expanded from macro 'FIX2INT'
#define FIX2INT(x)  RB_FIX2INT(x)
                               ^
/Users/wonse/.rbenv/versions/2.7.2/include/ruby-2.7.0/ruby/ruby.h:693:48: note: expanded from macro 'RB_FIX2INT'
#define RB_FIX2INT(x) ((int)rb_fix2int((VALUE)(x)))
                                               ^
posix-spawn.c:79:34: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
                                fd = FIX2INT(rb_funcall(obj, rb_intern("fileno"), 0));
                                                             ^~~~~~~~~~~~~~~~~~~
/Users/wonse/.rbenv/versions/2.7.2/include/ruby-2.7.0/ruby/ruby.h:1847:23: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                      ^
/Users/wonse/.rbenv/versions/2.7.2/include/ruby-2.7.0/ruby/ruby.h:2689:27: note: expanded from macro 'rb_funcall'
        rb_funcallv(recv, mid, \
                          ^~~
/Users/wonse/.rbenv/versions/2.7.2/include/ruby-2.7.0/ruby/ruby.h:717:32: note: expanded from macro 'FIX2INT'
#define FIX2INT(x)  RB_FIX2INT(x)
                               ^
/Users/wonse/.rbenv/versions/2.7.2/include/ruby-2.7.0/ruby/ruby.h:693:48: note: expanded from macro 'RB_FIX2INT'
#define RB_FIX2INT(x) ((int)rb_fix2int((VALUE)(x)))
                                               ^
posix-spawn.c:79:34: note: '{' token is here
                                fd = FIX2INT(rb_funcall(obj, rb_intern("fileno"), 0));
                                                             ^~~~~~~~~~~~~~~~~~~
/Users/wonse/.rbenv/versions/2.7.2/include/ruby-2.7.0/ruby/ruby.h:1847:24: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/wonse/.rbenv/versions/2.7.2/include/ruby-2.7.0/ruby/ruby.h:1832:5: note: expanded from macro 'RUBY_CONST_ID_CACHE'
    {                                                   \
    ^
/Users/wonse/.rbenv/versions/2.7.2/include/ruby-2.7.0/ruby/ruby.h:2689:27: note: expanded from macro 'rb_funcall'
        rb_funcallv(recv, mid, \
                          ^~~
/Users/wonse/.rbenv/versions/2.7.2/include/ruby-2.7.0/ruby/ruby.h:717:32: note: expanded from macro 'FIX2INT'
#define FIX2INT(x)  RB_FIX2INT(x)
                               ^
/Users/wonse/.rbenv/versions/2.7.2/include/ruby-2.7.0/ruby/ruby.h:693:48: note: expanded from macro 'RB_FIX2INT'
#define RB_FIX2INT(x) ((int)rb_fix2int((VALUE)(x)))
                                               ^
posix-spawn.c:79:34: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
                                fd = FIX2INT(rb_funcall(obj, rb_intern("fileno"), 0));
                                                             ^~~~~~~~~~~~~~~~~~~
/Users/wonse/.rbenv/versions/2.7.2/include/ruby-2.7.0/ruby/ruby.h:1847:24: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/wonse/.rbenv/versions/2.7.2/include/ruby-2.7.0/ruby/ruby.h:1837:5: note: expanded from macro 'RUBY_CONST_ID_CACHE'
    }
    ^
/Users/wonse/.rbenv/versions/2.7.2/include/ruby-2.7.0/ruby/ruby.h:2689:27: note: expanded from macro 'rb_funcall'
        rb_funcallv(recv, mid, \
                          ^~~
/Users/wonse/.rbenv/versions/2.7.2/include/ruby-2.7.0/ruby/ruby.h:717:32: note: expanded from macro 'FIX2INT'
#define FIX2INT(x)  RB_FIX2INT(x)
                               ^
/Users/wonse/.rbenv/versions/2.7.2/include/ruby-2.7.0/ruby/ruby.h:693:48: note: expanded from macro 'RB_FIX2INT'
#define RB_FIX2INT(x) ((int)rb_fix2int((VALUE)(x)))
                                               ^
posix-spawn.c:79:34: note: ')' token is here
                                fd = FIX2INT(rb_funcall(obj, rb_intern("fileno"), 0));
                                                             ^~~~~~~~~~~~~~~~~~~
/Users/wonse/.rbenv/versions/2.7.2/include/ruby-2.7.0/ruby/ruby.h:1847:56: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                                                       ^
/Users/wonse/.rbenv/versions/2.7.2/include/ruby-2.7.0/ruby/ruby.h:2689:27: note: expanded from macro 'rb_funcall'
        rb_funcallv(recv, mid, \
                          ^~~
/Users/wonse/.rbenv/versions/2.7.2/include/ruby-2.7.0/ruby/ruby.h:717:32: note: expanded from macro 'FIX2INT'
#define FIX2INT(x)  RB_FIX2INT(x)
                               ^
/Users/wonse/.rbenv/versions/2.7.2/include/ruby-2.7.0/ruby/ruby.h:693:48: note: expanded from macro 'RB_FIX2INT'
#define RB_FIX2INT(x) ((int)rb_fix2int((VALUE)(x)))
                                               ^
posix-spawn.c:85:27: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
                        if (rb_respond_to(obj, rb_intern("to_io"))) {
                                               ^~~~~~~~~~~~~~~~~~
/Users/wonse/.rbenv/versions/2.7.2/include/ruby-2.7.0/ruby/ruby.h:1847:23: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                      ^
posix-spawn.c:85:27: note: '{' token is here
                        if (rb_respond_to(obj, rb_intern("to_io"))) {
                                               ^~~~~~~~~~~~~~~~~~
/Users/wonse/.rbenv/versions/2.7.2/include/ruby-2.7.0/ruby/ruby.h:1847:24: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/wonse/.rbenv/versions/2.7.2/include/ruby-2.7.0/ruby/ruby.h:1832:5: note: expanded from macro 'RUBY_CONST_ID_CACHE'
    {                                                   \
    ^
posix-spawn.c:85:27: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
                        if (rb_respond_to(obj, rb_intern("to_io"))) {
                                               ^~~~~~~~~~~~~~~~~~
/Users/wonse/.rbenv/versions/2.7.2/include/ruby-2.7.0/ruby/ruby.h:1847:24: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/wonse/.rbenv/versions/2.7.2/include/ruby-2.7.0/ruby/ruby.h:1837:5: note: expanded from macro 'RUBY_CONST_ID_CACHE'
    }
    ^
posix-spawn.c:85:27: note: ')' token is here
                        if (rb_respond_to(obj, rb_intern("to_io"))) {
                                               ^~~~~~~~~~~~~~~~~~
/Users/wonse/.rbenv/versions/2.7.2/include/ruby-2.7.0/ruby/ruby.h:1847:56: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                                                       ^
posix-spawn.c:86:27: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
                                obj = rb_funcall(obj, rb_intern("to_io"), 0);
                                                      ^~~~~~~~~~~~~~~~~~
/Users/wonse/.rbenv/versions/2.7.2/include/ruby-2.7.0/ruby/ruby.h:1847:23: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                      ^
/Users/wonse/.rbenv/versions/2.7.2/include/ruby-2.7.0/ruby/ruby.h:2689:27: note: expanded from macro 'rb_funcall'
        rb_funcallv(recv, mid, \
                          ^~~
posix-spawn.c:86:27: note: '{' token is here
                                obj = rb_funcall(obj, rb_intern("to_io"), 0);
                                                      ^~~~~~~~~~~~~~~~~~
/Users/wonse/.rbenv/versions/2.7.2/include/ruby-2.7.0/ruby/ruby.h:1847:24: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/wonse/.rbenv/versions/2.7.2/include/ruby-2.7.0/ruby/ruby.h:1832:5: note: expanded from macro 'RUBY_CONST_ID_CACHE'
    {                                                   \
    ^
/Users/wonse/.rbenv/versions/2.7.2/include/ruby-2.7.0/ruby/ruby.h:2689:27: note: expanded from macro 'rb_funcall'
        rb_funcallv(recv, mid, \
                          ^~~
posix-spawn.c:86:27: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
                                obj = rb_funcall(obj, rb_intern("to_io"), 0);
                                                      ^~~~~~~~~~~~~~~~~~
/Users/wonse/.rbenv/versions/2.7.2/include/ruby-2.7.0/ruby/ruby.h:1847:24: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/wonse/.rbenv/versions/2.7.2/include/ruby-2.7.0/ruby/ruby.h:1837:5: note: expanded from macro 'RUBY_CONST_ID_CACHE'
    }
    ^
/Users/wonse/.rbenv/versions/2.7.2/include/ruby-2.7.0/ruby/ruby.h:2689:27: note: expanded from macro 'rb_funcall'
        rb_funcallv(recv, mid, \
                          ^~~
posix-spawn.c:86:27: note: ')' token is here
                                obj = rb_funcall(obj, rb_intern("to_io"), 0);
                                                      ^~~~~~~~~~~~~~~~~~
/Users/wonse/.rbenv/versions/2.7.2/include/ruby-2.7.0/ruby/ruby.h:1847:56: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                                                       ^
/Users/wonse/.rbenv/versions/2.7.2/include/ruby-2.7.0/ruby/ruby.h:2689:27: note: expanded from macro 'rb_funcall'
        rb_funcallv(recv, mid, \
                          ^~~
posix-spawn.c:87:28: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
                                if (rb_respond_to(obj, rb_intern("posix_fileno"))) {
                                                       ^~~~~~~~~~~~~~~~~~~~~~~~~
/Users/wonse/.rbenv/versions/2.7.2/include/ruby-2.7.0/ruby/ruby.h:1847:23: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                      ^
posix-spawn.c:87:28: note: '{' token is here
                                if (rb_respond_to(obj, rb_intern("posix_fileno"))) {
                                                       ^~~~~~~~~~~~~~~~~~~~~~~~~
/Users/wonse/.rbenv/versions/2.7.2/include/ruby-2.7.0/ruby/ruby.h:1847:24: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/wonse/.rbenv/versions/2.7.2/include/ruby-2.7.0/ruby/ruby.h:1832:5: note: expanded from macro 'RUBY_CONST_ID_CACHE'
    {                                                   \
    ^
posix-spawn.c:87:28: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
                                if (rb_respond_to(obj, rb_intern("posix_fileno"))) {
                                                       ^~~~~~~~~~~~~~~~~~~~~~~~~
/Users/wonse/.rbenv/versions/2.7.2/include/ruby-2.7.0/ruby/ruby.h:1847:24: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/wonse/.rbenv/versions/2.7.2/include/ruby-2.7.0/ruby/ruby.h:1837:5: note: expanded from macro 'RUBY_CONST_ID_CACHE'
    }
    ^
posix-spawn.c:87:28: note: ')' token is here
                                if (rb_respond_to(obj, rb_intern("posix_fileno"))) {
                                                       ^~~~~~~~~~~~~~~~~~~~~~~~~
/Users/wonse/.rbenv/versions/2.7.2/include/ruby-2.7.0/ruby/ruby.h:1847:56: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                                                       ^
posix-spawn.c:88:35: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
                                        fd = FIX2INT(rb_funcall(obj, rb_intern("posix_fileno"), 0));
                                                                     ^~~~~~~~~~~~~~~~~~~~~~~~~
/Users/wonse/.rbenv/versions/2.7.2/include/ruby-2.7.0/ruby/ruby.h:1847:23: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                      ^
/Users/wonse/.rbenv/versions/2.7.2/include/ruby-2.7.0/ruby/ruby.h:2689:27: note: expanded from macro 'rb_funcall'
        rb_funcallv(recv, mid, \
                          ^~~
/Users/wonse/.rbenv/versions/2.7.2/include/ruby-2.7.0/ruby/ruby.h:717:32: note: expanded from macro 'FIX2INT'
#define FIX2INT(x)  RB_FIX2INT(x)
                               ^
/Users/wonse/.rbenv/versions/2.7.2/include/ruby-2.7.0/ruby/ruby.h:693:48: note: expanded from macro 'RB_FIX2INT'
#define RB_FIX2INT(x) ((int)rb_fix2int((VALUE)(x)))
                                               ^
posix-spawn.c:88:35: note: '{' token is here
                                        fd = FIX2INT(rb_funcall(obj, rb_intern("posix_fileno"), 0));
                                                                     ^~~~~~~~~~~~~~~~~~~~~~~~~
/Users/wonse/.rbenv/versions/2.7.2/include/ruby-2.7.0/ruby/ruby.h:1847:24: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/wonse/.rbenv/versions/2.7.2/include/ruby-2.7.0/ruby/ruby.h:1832:5: note: expanded from macro 'RUBY_CONST_ID_CACHE'
    {                                                   \
    ^
/Users/wonse/.rbenv/versions/2.7.2/include/ruby-2.7.0/ruby/ruby.h:2689:27: note: expanded from macro 'rb_funcall'
        rb_funcallv(recv, mid, \
                          ^~~
/Users/wonse/.rbenv/versions/2.7.2/include/ruby-2.7.0/ruby/ruby.h:717:32: note: expanded from macro 'FIX2INT'
#define FIX2INT(x)  RB_FIX2INT(x)
                               ^
/Users/wonse/.rbenv/versions/2.7.2/include/ruby-2.7.0/ruby/ruby.h:693:48: note: expanded from macro 'RB_FIX2INT'
#define RB_FIX2INT(x) ((int)rb_fix2int((VALUE)(x)))
                                               ^
posix-spawn.c:88:35: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
                                        fd = FIX2INT(rb_funcall(obj, rb_intern("posix_fileno"), 0));
                                                                     ^~~~~~~~~~~~~~~~~~~~~~~~~
/Users/wonse/.rbenv/versions/2.7.2/include/ruby-2.7.0/ruby/ruby.h:1847:24: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/wonse/.rbenv/versions/2.7.2/include/ruby-2.7.0/ruby/ruby.h:1837:5: note: expanded from macro 'RUBY_CONST_ID_CACHE'
    }
    ^
/Users/wonse/.rbenv/versions/2.7.2/include/ruby-2.7.0/ruby/ruby.h:2689:27: note: expanded from macro 'rb_funcall'
        rb_funcallv(recv, mid, \
                          ^~~
/Users/wonse/.rbenv/versions/2.7.2/include/ruby-2.7.0/ruby/ruby.h:717:32: note: expanded from macro 'FIX2INT'
#define FIX2INT(x)  RB_FIX2INT(x)
                               ^
/Users/wonse/.rbenv/versions/2.7.2/include/ruby-2.7.0/ruby/ruby.h:693:48: note: expanded from macro 'RB_FIX2INT'
#define RB_FIX2INT(x) ((int)rb_fix2int((VALUE)(x)))
                                               ^
posix-spawn.c:88:35: note: ')' token is here
                                        fd = FIX2INT(rb_funcall(obj, rb_intern("posix_fileno"), 0));
                                                                     ^~~~~~~~~~~~~~~~~~~~~~~~~
/Users/wonse/.rbenv/versions/2.7.2/include/ruby-2.7.0/ruby/ruby.h:1847:56: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                                                       ^
/Users/wonse/.rbenv/versions/2.7.2/include/ruby-2.7.0/ruby/ruby.h:2689:27: note: expanded from macro 'rb_funcall'
        rb_funcallv(recv, mid, \
                          ^~~
/Users/wonse/.rbenv/versions/2.7.2/include/ruby-2.7.0/ruby/ruby.h:717:32: note: expanded from macro 'FIX2INT'
#define FIX2INT(x)  RB_FIX2INT(x)
                               ^
/Users/wonse/.rbenv/versions/2.7.2/include/ruby-2.7.0/ruby/ruby.h:693:48: note: expanded from macro 'RB_FIX2INT'
#define RB_FIX2INT(x) ((int)rb_fix2int((VALUE)(x)))
                                               ^
posix-spawn.c:90:35: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
                                        fd = FIX2INT(rb_funcall(obj, rb_intern("fileno"), 0));
                                                                     ^~~~~~~~~~~~~~~~~~~
/Users/wonse/.rbenv/versions/2.7.2/include/ruby-2.7.0/ruby/ruby.h:1847:23: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                      ^
/Users/wonse/.rbenv/versions/2.7.2/include/ruby-2.7.0/ruby/ruby.h:2689:27: note: expanded from macro 'rb_funcall'
        rb_funcallv(recv, mid, \
                          ^~~
/Users/wonse/.rbenv/versions/2.7.2/include/ruby-2.7.0/ruby/ruby.h:717:32: note: expanded from macro 'FIX2INT'
#define FIX2INT(x)  RB_FIX2INT(x)
                               ^
/Users/wonse/.rbenv/versions/2.7.2/include/ruby-2.7.0/ruby/ruby.h:693:48: note: expanded from macro 'RB_FIX2INT'
#define RB_FIX2INT(x) ((int)rb_fix2int((VALUE)(x)))
                                               ^
posix-spawn.c:90:35: note: '{' token is here
                                        fd = FIX2INT(rb_funcall(obj, rb_intern("fileno"), 0));
                                                                     ^~~~~~~~~~~~~~~~~~~
/Users/wonse/.rbenv/versions/2.7.2/include/ruby-2.7.0/ruby/ruby.h:1847:24: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/wonse/.rbenv/versions/2.7.2/include/ruby-2.7.0/ruby/ruby.h:1832:5: note: expanded from macro 'RUBY_CONST_ID_CACHE'
    {                                                   \
    ^
/Users/wonse/.rbenv/versions/2.7.2/include/ruby-2.7.0/ruby/ruby.h:2689:27: note: expanded from macro 'rb_funcall'
        rb_funcallv(recv, mid, \
                          ^~~
/Users/wonse/.rbenv/versions/2.7.2/include/ruby-2.7.0/ruby/ruby.h:717:32: note: expanded from macro 'FIX2INT'
#define FIX2INT(x)  RB_FIX2INT(x)
                               ^
/Users/wonse/.rbenv/versions/2.7.2/include/ruby-2.7.0/ruby/ruby.h:693:48: note: expanded from macro 'RB_FIX2INT'
#define RB_FIX2INT(x) ((int)rb_fix2int((VALUE)(x)))
                                               ^
posix-spawn.c:90:35: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
                                        fd = FIX2INT(rb_funcall(obj, rb_intern("fileno"), 0));
                                                                     ^~~~~~~~~~~~~~~~~~~
/Users/wonse/.rbenv/versions/2.7.2/include/ruby-2.7.0/ruby/ruby.h:1847:24: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/wonse/.rbenv/versions/2.7.2/include/ruby-2.7.0/ruby/ruby.h:1837:5: note: expanded from macro 'RUBY_CONST_ID_CACHE'
    }
    ^
/Users/wonse/.rbenv/versions/2.7.2/include/ruby-2.7.0/ruby/ruby.h:2689:27: note: expanded from macro 'rb_funcall'
        rb_funcallv(recv, mid, \
                          ^~~
/Users/wonse/.rbenv/versions/2.7.2/include/ruby-2.7.0/ruby/ruby.h:717:32: note: expanded from macro 'FIX2INT'
#define FIX2INT(x)  RB_FIX2INT(x)
                               ^
/Users/wonse/.rbenv/versions/2.7.2/include/ruby-2.7.0/ruby/ruby.h:693:48: note: expanded from macro 'RB_FIX2INT'
#define RB_FIX2INT(x) ((int)rb_fix2int((VALUE)(x)))
                                               ^
posix-spawn.c:90:35: note: ')' token is here
                                        fd = FIX2INT(rb_funcall(obj, rb_intern("fileno"), 0));
                                                                     ^~~~~~~~~~~~~~~~~~~
/Users/wonse/.rbenv/versions/2.7.2/include/ruby-2.7.0/ruby/ruby.h:1847:56: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                                                       ^
/Users/wonse/.rbenv/versions/2.7.2/include/ruby-2.7.0/ruby/ruby.h:2689:27: note: expanded from macro 'rb_funcall'
        rb_funcallv(recv, mid, \
                          ^~~
/Users/wonse/.rbenv/versions/2.7.2/include/ruby-2.7.0/ruby/ruby.h:717:32: note: expanded from macro 'FIX2INT'
#define FIX2INT(x)  RB_FIX2INT(x)
                               ^
/Users/wonse/.rbenv/versions/2.7.2/include/ruby-2.7.0/ruby/ruby.h:693:48: note: expanded from macro 'RB_FIX2INT'
#define RB_FIX2INT(x) ((int)rb_fix2int((VALUE)(x)))
                                               ^
posix-spawn.c:112:46: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        if (TYPE(val) != T_SYMBOL || SYM2ID(val) != rb_intern("close"))
                                                    ^~~~~~~~~~~~~~~~~~
/Users/wonse/.rbenv/versions/2.7.2/include/ruby-2.7.0/ruby/ruby.h:1847:23: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                      ^
posix-spawn.c:112:46: note: '{' token is here
        if (TYPE(val) != T_SYMBOL || SYM2ID(val) != rb_intern("close"))
                                                    ^~~~~~~~~~~~~~~~~~
/Users/wonse/.rbenv/versions/2.7.2/include/ruby-2.7.0/ruby/ruby.h:1847:24: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/wonse/.rbenv/versions/2.7.2/include/ruby-2.7.0/ruby/ruby.h:1832:5: note: expanded from macro 'RUBY_CONST_ID_CACHE'
    {                                                   \
    ^
posix-spawn.c:112:46: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        if (TYPE(val) != T_SYMBOL || SYM2ID(val) != rb_intern("close"))
                                                    ^~~~~~~~~~~~~~~~~~
/Users/wonse/.rbenv/versions/2.7.2/include/ruby-2.7.0/ruby/ruby.h:1847:24: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/wonse/.rbenv/versions/2.7.2/include/ruby-2.7.0/ruby/ruby.h:1837:5: note: expanded from macro 'RUBY_CONST_ID_CACHE'
    }
    ^
posix-spawn.c:112:46: note: ')' token is here
        if (TYPE(val) != T_SYMBOL || SYM2ID(val) != rb_intern("close"))
                                                    ^~~~~~~~~~~~~~~~~~
/Users/wonse/.rbenv/versions/2.7.2/include/ruby-2.7.0/ruby/ruby.h:1847:56: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                                                       ^
posix-spawn.c:226:27: warning: incompatible function pointer types passing 'int (VALUE, VALUE, posix_spawn_file_actions_t *)' (aka 'int (unsigned long, unsigned long, void **)') to parameter of type 'int (*)(VALUE, VALUE, VALUE)' (aka 'int (*)(unsigned long, unsigned long, unsigned long)') [-Wincompatible-function-pointer-types]
        rb_hash_foreach(options, posixspawn_file_actions_operations_iter, (VALUE)fops);
                                 ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/wonse/.rbenv/versions/2.7.2/include/ruby-2.7.0/ruby/intern.h:558:35: note: passing argument to parameter here
void rb_hash_foreach(VALUE, int (*)(VALUE, VALUE, VALUE), VALUE);
                                  ^
posix-spawn.c:246:46: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        pgroup_val = rb_hash_delete(options, ID2SYM(rb_intern("pgroup")));
                                                    ^~~~~~~~~~~~~~~~~~~
/Users/wonse/.rbenv/versions/2.7.2/include/ruby-2.7.0/ruby/ruby.h:1847:23: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                      ^
/Users/wonse/.rbenv/versions/2.7.2/include/ruby-2.7.0/ruby/ruby.h:414:29: note: expanded from macro 'ID2SYM'
#define ID2SYM(x) RB_ID2SYM(x)
                            ^
/Users/wonse/.rbenv/versions/2.7.2/include/ruby-2.7.0/ruby/ruby.h:409:33: note: expanded from macro 'RB_ID2SYM'
#define RB_ID2SYM(x) (rb_id2sym(x))
                                ^
posix-spawn.c:246:46: note: '{' token is here
        pgroup_val = rb_hash_delete(options, ID2SYM(rb_intern("pgroup")));
                                                    ^~~~~~~~~~~~~~~~~~~
/Users/wonse/.rbenv/versions/2.7.2/include/ruby-2.7.0/ruby/ruby.h:1847:24: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/wonse/.rbenv/versions/2.7.2/include/ruby-2.7.0/ruby/ruby.h:1832:5: note: expanded from macro 'RUBY_CONST_ID_CACHE'
    {                                                   \
    ^
/Users/wonse/.rbenv/versions/2.7.2/include/ruby-2.7.0/ruby/ruby.h:414:29: note: expanded from macro 'ID2SYM'
#define ID2SYM(x) RB_ID2SYM(x)
                            ^
/Users/wonse/.rbenv/versions/2.7.2/include/ruby-2.7.0/ruby/ruby.h:409:33: note: expanded from macro 'RB_ID2SYM'
#define RB_ID2SYM(x) (rb_id2sym(x))
                                ^
posix-spawn.c:246:46: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        pgroup_val = rb_hash_delete(options, ID2SYM(rb_intern("pgroup")));
                                                    ^~~~~~~~~~~~~~~~~~~
/Users/wonse/.rbenv/versions/2.7.2/include/ruby-2.7.0/ruby/ruby.h:1847:24: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/wonse/.rbenv/versions/2.7.2/include/ruby-2.7.0/ruby/ruby.h:1837:5: note: expanded from macro 'RUBY_CONST_ID_CACHE'
    }
    ^
/Users/wonse/.rbenv/versions/2.7.2/include/ruby-2.7.0/ruby/ruby.h:414:29: note: expanded from macro 'ID2SYM'
#define ID2SYM(x) RB_ID2SYM(x)
                            ^
/Users/wonse/.rbenv/versions/2.7.2/include/ruby-2.7.0/ruby/ruby.h:409:33: note: expanded from macro 'RB_ID2SYM'
#define RB_ID2SYM(x) (rb_id2sym(x))
                                ^
posix-spawn.c:246:46: note: ')' token is here
        pgroup_val = rb_hash_delete(options, ID2SYM(rb_intern("pgroup")));
                                                    ^~~~~~~~~~~~~~~~~~~
/Users/wonse/.rbenv/versions/2.7.2/include/ruby-2.7.0/ruby/ruby.h:1847:56: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                                                       ^
/Users/wonse/.rbenv/versions/2.7.2/include/ruby-2.7.0/ruby/ruby.h:414:29: note: expanded from macro 'ID2SYM'
#define ID2SYM(x) RB_ID2SYM(x)
                            ^
/Users/wonse/.rbenv/versions/2.7.2/include/ruby-2.7.0/ruby/ruby.h:409:33: note: expanded from macro 'RB_ID2SYM'
#define RB_ID2SYM(x) (rb_id2sym(x))
                                ^
posix-spawn.c:366:54: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
                unsetenv_others_p = rb_hash_delete(options, ID2SYM(rb_intern("unsetenv_others")));
                                                                   ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/wonse/.rbenv/versions/2.7.2/include/ruby-2.7.0/ruby/ruby.h:1847:23: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                      ^
/Users/wonse/.rbenv/versions/2.7.2/include/ruby-2.7.0/ruby/ruby.h:414:29: note: expanded from macro 'ID2SYM'
#define ID2SYM(x) RB_ID2SYM(x)
                            ^
/Users/wonse/.rbenv/versions/2.7.2/include/ruby-2.7.0/ruby/ruby.h:409:33: note: expanded from macro 'RB_ID2SYM'
#define RB_ID2SYM(x) (rb_id2sym(x))
                                ^
posix-spawn.c:366:54: note: '{' token is here
                unsetenv_others_p = rb_hash_delete(options, ID2SYM(rb_intern("unsetenv_others")));
                                                                   ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/wonse/.rbenv/versions/2.7.2/include/ruby-2.7.0/ruby/ruby.h:1847:24: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/wonse/.rbenv/versions/2.7.2/include/ruby-2.7.0/ruby/ruby.h:1832:5: note: expanded from macro 'RUBY_CONST_ID_CACHE'
    {                                                   \
    ^
/Users/wonse/.rbenv/versions/2.7.2/include/ruby-2.7.0/ruby/ruby.h:414:29: note: expanded from macro 'ID2SYM'
#define ID2SYM(x) RB_ID2SYM(x)
                            ^
/Users/wonse/.rbenv/versions/2.7.2/include/ruby-2.7.0/ruby/ruby.h:409:33: note: expanded from macro 'RB_ID2SYM'
#define RB_ID2SYM(x) (rb_id2sym(x))
                                ^
posix-spawn.c:366:54: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
                unsetenv_others_p = rb_hash_delete(options, ID2SYM(rb_intern("unsetenv_others")));
                                                                   ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/wonse/.rbenv/versions/2.7.2/include/ruby-2.7.0/ruby/ruby.h:1847:24: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/wonse/.rbenv/versions/2.7.2/include/ruby-2.7.0/ruby/ruby.h:1837:5: note: expanded from macro 'RUBY_CONST_ID_CACHE'
    }
    ^
/Users/wonse/.rbenv/versions/2.7.2/include/ruby-2.7.0/ruby/ruby.h:414:29: note: expanded from macro 'ID2SYM'
#define ID2SYM(x) RB_ID2SYM(x)
                            ^
/Users/wonse/.rbenv/versions/2.7.2/include/ruby-2.7.0/ruby/ruby.h:409:33: note: expanded from macro 'RB_ID2SYM'
#define RB_ID2SYM(x) (rb_id2sym(x))
                                ^
posix-spawn.c:366:54: note: ')' token is here
                unsetenv_others_p = rb_hash_delete(options, ID2SYM(rb_intern("unsetenv_others")));
                                                                   ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/wonse/.rbenv/versions/2.7.2/include/ruby-2.7.0/ruby/ruby.h:1847:56: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                                                       ^
/Users/wonse/.rbenv/versions/2.7.2/include/ruby-2.7.0/ruby/ruby.h:414:29: note: expanded from macro 'ID2SYM'
#define ID2SYM(x) RB_ID2SYM(x)
                            ^
/Users/wonse/.rbenv/versions/2.7.2/include/ruby-2.7.0/ruby/ruby.h:409:33: note: expanded from macro 'RB_ID2SYM'
#define RB_ID2SYM(x) (rb_id2sym(x))
                                ^
posix-spawn.c:430:53: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        if (RTEST(dirname = rb_hash_delete(options, ID2SYM(rb_intern("chdir"))))) {
                                                           ^~~~~~~~~~~~~~~~~~
/Users/wonse/.rbenv/versions/2.7.2/include/ruby-2.7.0/ruby/ruby.h:1847:23: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                      ^
/Users/wonse/.rbenv/versions/2.7.2/include/ruby-2.7.0/ruby/ruby.h:414:29: note: expanded from macro 'ID2SYM'
#define ID2SYM(x) RB_ID2SYM(x)
                            ^
/Users/wonse/.rbenv/versions/2.7.2/include/ruby-2.7.0/ruby/ruby.h:409:33: note: expanded from macro 'RB_ID2SYM'
#define RB_ID2SYM(x) (rb_id2sym(x))
                                ^
/Users/wonse/.rbenv/versions/2.7.2/include/ruby-2.7.0/ruby/ruby.h:481:26: note: expanded from macro 'RTEST'
#define RTEST(v) RB_TEST(v)
                         ^
/Users/wonse/.rbenv/versions/2.7.2/include/ruby-2.7.0/ruby/ruby.h:479:31: note: expanded from macro 'RB_TEST'
#define RB_TEST(v) !(((VALUE)(v) & (VALUE)~RUBY_Qnil) == 0)
                              ^
posix-spawn.c:430:53: note: '{' token is here
        if (RTEST(dirname = rb_hash_delete(options, ID2SYM(rb_intern("chdir"))))) {
                                                           ^~~~~~~~~~~~~~~~~~
/Users/wonse/.rbenv/versions/2.7.2/include/ruby-2.7.0/ruby/ruby.h:1847:24: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/wonse/.rbenv/versions/2.7.2/include/ruby-2.7.0/ruby/ruby.h:1832:5: note: expanded from macro 'RUBY_CONST_ID_CACHE'
    {                                                   \
    ^
/Users/wonse/.rbenv/versions/2.7.2/include/ruby-2.7.0/ruby/ruby.h:414:29: note: expanded from macro 'ID2SYM'
#define ID2SYM(x) RB_ID2SYM(x)
                            ^
/Users/wonse/.rbenv/versions/2.7.2/include/ruby-2.7.0/ruby/ruby.h:409:33: note: expanded from macro 'RB_ID2SYM'
#define RB_ID2SYM(x) (rb_id2sym(x))
                                ^
/Users/wonse/.rbenv/versions/2.7.2/include/ruby-2.7.0/ruby/ruby.h:481:26: note: expanded from macro 'RTEST'
#define RTEST(v) RB_TEST(v)
                         ^
/Users/wonse/.rbenv/versions/2.7.2/include/ruby-2.7.0/ruby/ruby.h:479:31: note: expanded from macro 'RB_TEST'
#define RB_TEST(v) !(((VALUE)(v) & (VALUE)~RUBY_Qnil) == 0)
                              ^
posix-spawn.c:430:53: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        if (RTEST(dirname = rb_hash_delete(options, ID2SYM(rb_intern("chdir"))))) {
                                                           ^~~~~~~~~~~~~~~~~~
/Users/wonse/.rbenv/versions/2.7.2/include/ruby-2.7.0/ruby/ruby.h:1847:24: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/wonse/.rbenv/versions/2.7.2/include/ruby-2.7.0/ruby/ruby.h:1837:5: note: expanded from macro 'RUBY_CONST_ID_CACHE'
    }
    ^
/Users/wonse/.rbenv/versions/2.7.2/include/ruby-2.7.0/ruby/ruby.h:414:29: note: expanded from macro 'ID2SYM'
#define ID2SYM(x) RB_ID2SYM(x)
                            ^
/Users/wonse/.rbenv/versions/2.7.2/include/ruby-2.7.0/ruby/ruby.h:409:33: note: expanded from macro 'RB_ID2SYM'
#define RB_ID2SYM(x) (rb_id2sym(x))
                                ^
/Users/wonse/.rbenv/versions/2.7.2/include/ruby-2.7.0/ruby/ruby.h:481:26: note: expanded from macro 'RTEST'
#define RTEST(v) RB_TEST(v)
                         ^
/Users/wonse/.rbenv/versions/2.7.2/include/ruby-2.7.0/ruby/ruby.h:479:31: note: expanded from macro 'RB_TEST'
#define RB_TEST(v) !(((VALUE)(v) & (VALUE)~RUBY_Qnil) == 0)
                              ^
posix-spawn.c:430:53: note: ')' token is here
        if (RTEST(dirname = rb_hash_delete(options, ID2SYM(rb_intern("chdir"))))) {
                                                           ^~~~~~~~~~~~~~~~~~
/Users/wonse/.rbenv/versions/2.7.2/include/ruby-2.7.0/ruby/ruby.h:1847:56: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                                                       ^
/Users/wonse/.rbenv/versions/2.7.2/include/ruby-2.7.0/ruby/ruby.h:414:29: note: expanded from macro 'ID2SYM'
#define ID2SYM(x) RB_ID2SYM(x)
                            ^
/Users/wonse/.rbenv/versions/2.7.2/include/ruby-2.7.0/ruby/ruby.h:409:33: note: expanded from macro 'RB_ID2SYM'
#define RB_ID2SYM(x) (rb_id2sym(x))
                                ^
/Users/wonse/.rbenv/versions/2.7.2/include/ruby-2.7.0/ruby/ruby.h:481:26: note: expanded from macro 'RTEST'
#define RTEST(v) RB_TEST(v)
                         ^
/Users/wonse/.rbenv/versions/2.7.2/include/ruby-2.7.0/ruby/ruby.h:479:31: note: expanded from macro 'RB_TEST'
#define RB_TEST(v) !(((VALUE)(v) & (VALUE)~RUBY_Qnil) == 0)
                              ^
posix-spawn.c:465:91: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
                rb_raise(rb_eArgError, "Invalid option: %s", RSTRING_PTR(rb_inspect(rb_funcall(options, rb_intern("first"), 0))));
                                                                                                        ^~~~~~~~~~~~~~~~~~
/Users/wonse/.rbenv/versions/2.7.2/include/ruby-2.7.0/ruby/ruby.h:1847:23: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                      ^
/Users/wonse/.rbenv/versions/2.7.2/include/ruby-2.7.0/ruby/ruby.h:2689:27: note: expanded from macro 'rb_funcall'
        rb_funcallv(recv, mid, \
                          ^~~
/Users/wonse/.rbenv/versions/2.7.2/include/ruby-2.7.0/ruby/ruby.h:1010:15: note: expanded from macro 'RSTRING_PTR'
    (!(RBASIC(str)->flags & RSTRING_NOEMBED) ? \
              ^~~
/Users/wonse/.rbenv/versions/2.7.2/include/ruby-2.7.0/ruby/ruby.h:1267:38: note: expanded from macro 'RBASIC'
#define RBASIC(obj)  (R_CAST(RBasic)(obj))
                                     ^~~
posix-spawn.c:465:91: note: '{' token is here
                rb_raise(rb_eArgError, "Invalid option: %s", RSTRING_PTR(rb_inspect(rb_funcall(options, rb_intern("first"), 0))));
                                                                                                        ^~~~~~~~~~~~~~~~~~
/Users/wonse/.rbenv/versions/2.7.2/include/ruby-2.7.0/ruby/ruby.h:1847:24: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/wonse/.rbenv/versions/2.7.2/include/ruby-2.7.0/ruby/ruby.h:1832:5: note: expanded from macro 'RUBY_CONST_ID_CACHE'
    {                                                   \
    ^
/Users/wonse/.rbenv/versions/2.7.2/include/ruby-2.7.0/ruby/ruby.h:2689:27: note: expanded from macro 'rb_funcall'
        rb_funcallv(recv, mid, \
                          ^~~
/Users/wonse/.rbenv/versions/2.7.2/include/ruby-2.7.0/ruby/ruby.h:1010:15: note: expanded from macro 'RSTRING_PTR'
    (!(RBASIC(str)->flags & RSTRING_NOEMBED) ? \
              ^~~
/Users/wonse/.rbenv/versions/2.7.2/include/ruby-2.7.0/ruby/ruby.h:1267:38: note: expanded from macro 'RBASIC'
#define RBASIC(obj)  (R_CAST(RBasic)(obj))
                                     ^~~
posix-spawn.c:465:91: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
                rb_raise(rb_eArgError, "Invalid option: %s", RSTRING_PTR(rb_inspect(rb_funcall(options, rb_intern("first"), 0))));
                                                                                                        ^~~~~~~~~~~~~~~~~~
/Users/wonse/.rbenv/versions/2.7.2/include/ruby-2.7.0/ruby/ruby.h:1847:24: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/wonse/.rbenv/versions/2.7.2/include/ruby-2.7.0/ruby/ruby.h:1837:5: note: expanded from macro 'RUBY_CONST_ID_CACHE'
    }
    ^
/Users/wonse/.rbenv/versions/2.7.2/include/ruby-2.7.0/ruby/ruby.h:2689:27: note: expanded from macro 'rb_funcall'
        rb_funcallv(recv, mid, \
                          ^~~
/Users/wonse/.rbenv/versions/2.7.2/include/ruby-2.7.0/ruby/ruby.h:1010:15: note: expanded from macro 'RSTRING_PTR'
    (!(RBASIC(str)->flags & RSTRING_NOEMBED) ? \
              ^~~
/Users/wonse/.rbenv/versions/2.7.2/include/ruby-2.7.0/ruby/ruby.h:1267:38: note: expanded from macro 'RBASIC'
#define RBASIC(obj)  (R_CAST(RBasic)(obj))
                                     ^~~
posix-spawn.c:465:91: note: ')' token is here
                rb_raise(rb_eArgError, "Invalid option: %s", RSTRING_PTR(rb_inspect(rb_funcall(options, rb_intern("first"), 0))));
                                                                                                        ^~~~~~~~~~~~~~~~~~
/Users/wonse/.rbenv/versions/2.7.2/include/ruby-2.7.0/ruby/ruby.h:1847:56: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                                                       ^
/Users/wonse/.rbenv/versions/2.7.2/include/ruby-2.7.0/ruby/ruby.h:2689:27: note: expanded from macro 'rb_funcall'
        rb_funcallv(recv, mid, \
                          ^~~
/Users/wonse/.rbenv/versions/2.7.2/include/ruby-2.7.0/ruby/ruby.h:1010:15: note: expanded from macro 'RSTRING_PTR'
    (!(RBASIC(str)->flags & RSTRING_NOEMBED) ? \
              ^~~
/Users/wonse/.rbenv/versions/2.7.2/include/ruby-2.7.0/ruby/ruby.h:1267:38: note: expanded from macro 'RBASIC'
#define RBASIC(obj)  (R_CAST(RBasic)(obj))
                                     ^~~
posix-spawn.c:465:91: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
                rb_raise(rb_eArgError, "Invalid option: %s", RSTRING_PTR(rb_inspect(rb_funcall(options, rb_intern("first"), 0))));
                                                                                                        ^~~~~~~~~~~~~~~~~~
/Users/wonse/.rbenv/versions/2.7.2/include/ruby-2.7.0/ruby/ruby.h:1847:23: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                      ^
/Users/wonse/.rbenv/versions/2.7.2/include/ruby-2.7.0/ruby/ruby.h:2689:27: note: expanded from macro 'rb_funcall'
        rb_funcallv(recv, mid, \
                          ^~~
/Users/wonse/.rbenv/versions/2.7.2/include/ruby-2.7.0/ruby/ruby.h:1011:14: note: expanded from macro 'RSTRING_PTR'
     RSTRING(str)->as.ary : \
             ^~~
/Users/wonse/.rbenv/versions/2.7.2/include/ruby-2.7.0/ruby/ruby.h:1271:39: note: expanded from macro 'RSTRING'
#define RSTRING(obj) (R_CAST(RString)(obj))
                                      ^~~
posix-spawn.c:465:91: note: '{' token is here
                rb_raise(rb_eArgError, "Invalid option: %s", RSTRING_PTR(rb_inspect(rb_funcall(options, rb_intern("first"), 0))));
                                                                                                        ^~~~~~~~~~~~~~~~~~
/Users/wonse/.rbenv/versions/2.7.2/include/ruby-2.7.0/ruby/ruby.h:1847:24: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/wonse/.rbenv/versions/2.7.2/include/ruby-2.7.0/ruby/ruby.h:1832:5: note: expanded from macro 'RUBY_CONST_ID_CACHE'
    {                                                   \
    ^
/Users/wonse/.rbenv/versions/2.7.2/include/ruby-2.7.0/ruby/ruby.h:2689:27: note: expanded from macro 'rb_funcall'
        rb_funcallv(recv, mid, \
                          ^~~
/Users/wonse/.rbenv/versions/2.7.2/include/ruby-2.7.0/ruby/ruby.h:1011:14: note: expanded from macro 'RSTRING_PTR'
     RSTRING(str)->as.ary : \
             ^~~
/Users/wonse/.rbenv/versions/2.7.2/include/ruby-2.7.0/ruby/ruby.h:1271:39: note: expanded from macro 'RSTRING'
#define RSTRING(obj) (R_CAST(RString)(obj))
                                      ^~~
posix-spawn.c:465:91: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
                rb_raise(rb_eArgError, "Invalid option: %s", RSTRING_PTR(rb_inspect(rb_funcall(options, rb_intern("first"), 0))));
                                                                                                        ^~~~~~~~~~~~~~~~~~
/Users/wonse/.rbenv/versions/2.7.2/include/ruby-2.7.0/ruby/ruby.h:1847:24: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/wonse/.rbenv/versions/2.7.2/include/ruby-2.7.0/ruby/ruby.h:1837:5: note: expanded from macro 'RUBY_CONST_ID_CACHE'
    }
    ^
/Users/wonse/.rbenv/versions/2.7.2/include/ruby-2.7.0/ruby/ruby.h:2689:27: note: expanded from macro 'rb_funcall'
        rb_funcallv(recv, mid, \
                          ^~~
/Users/wonse/.rbenv/versions/2.7.2/include/ruby-2.7.0/ruby/ruby.h:1011:14: note: expanded from macro 'RSTRING_PTR'
     RSTRING(str)->as.ary : \
             ^~~
/Users/wonse/.rbenv/versions/2.7.2/include/ruby-2.7.0/ruby/ruby.h:1271:39: note: expanded from macro 'RSTRING'
#define RSTRING(obj) (R_CAST(RString)(obj))
                                      ^~~
posix-spawn.c:465:91: note: ')' token is here
                rb_raise(rb_eArgError, "Invalid option: %s", RSTRING_PTR(rb_inspect(rb_funcall(options, rb_intern("first"), 0))));
                                                                                                        ^~~~~~~~~~~~~~~~~~
/Users/wonse/.rbenv/versions/2.7.2/include/ruby-2.7.0/ruby/ruby.h:1847:56: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                                                       ^
/Users/wonse/.rbenv/versions/2.7.2/include/ruby-2.7.0/ruby/ruby.h:2689:27: note: expanded from macro 'rb_funcall'
        rb_funcallv(recv, mid, \
                          ^~~
/Users/wonse/.rbenv/versions/2.7.2/include/ruby-2.7.0/ruby/ruby.h:1011:14: note: expanded from macro 'RSTRING_PTR'
     RSTRING(str)->as.ary : \
             ^~~
/Users/wonse/.rbenv/versions/2.7.2/include/ruby-2.7.0/ruby/ruby.h:1271:39: note: expanded from macro 'RSTRING'
#define RSTRING(obj) (R_CAST(RString)(obj))
                                      ^~~
posix-spawn.c:465:91: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
                rb_raise(rb_eArgError, "Invalid option: %s", RSTRING_PTR(rb_inspect(rb_funcall(options, rb_intern("first"), 0))));
                                                                                                        ^~~~~~~~~~~~~~~~~~
/Users/wonse/.rbenv/versions/2.7.2/include/ruby-2.7.0/ruby/ruby.h:1847:23: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                      ^
/Users/wonse/.rbenv/versions/2.7.2/include/ruby-2.7.0/ruby/ruby.h:2689:27: note: expanded from macro 'rb_funcall'
        rb_funcallv(recv, mid, \
                          ^~~
/Users/wonse/.rbenv/versions/2.7.2/include/ruby-2.7.0/ruby/ruby.h:1012:14: note: expanded from macro 'RSTRING_PTR'
     RSTRING(str)->as.heap.ptr)
             ^~~
/Users/wonse/.rbenv/versions/2.7.2/include/ruby-2.7.0/ruby/ruby.h:1271:39: note: expanded from macro 'RSTRING'
#define RSTRING(obj) (R_CAST(RString)(obj))
                                      ^~~
posix-spawn.c:465:91: note: '{' token is here
                rb_raise(rb_eArgError, "Invalid option: %s", RSTRING_PTR(rb_inspect(rb_funcall(options, rb_intern("first"), 0))));
                                                                                                        ^~~~~~~~~~~~~~~~~~
/Users/wonse/.rbenv/versions/2.7.2/include/ruby-2.7.0/ruby/ruby.h:1847:24: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/wonse/.rbenv/versions/2.7.2/include/ruby-2.7.0/ruby/ruby.h:1832:5: note: expanded from macro 'RUBY_CONST_ID_CACHE'
    {                                                   \
    ^
/Users/wonse/.rbenv/versions/2.7.2/include/ruby-2.7.0/ruby/ruby.h:2689:27: note: expanded from macro 'rb_funcall'
        rb_funcallv(recv, mid, \
                          ^~~
/Users/wonse/.rbenv/versions/2.7.2/include/ruby-2.7.0/ruby/ruby.h:1012:14: note: expanded from macro 'RSTRING_PTR'
     RSTRING(str)->as.heap.ptr)
             ^~~
/Users/wonse/.rbenv/versions/2.7.2/include/ruby-2.7.0/ruby/ruby.h:1271:39: note: expanded from macro 'RSTRING'
#define RSTRING(obj) (R_CAST(RString)(obj))
                                      ^~~
posix-spawn.c:465:91: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
                rb_raise(rb_eArgError, "Invalid option: %s", RSTRING_PTR(rb_inspect(rb_funcall(options, rb_intern("first"), 0))));
                                                                                                        ^~~~~~~~~~~~~~~~~~
/Users/wonse/.rbenv/versions/2.7.2/include/ruby-2.7.0/ruby/ruby.h:1847:24: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/wonse/.rbenv/versions/2.7.2/include/ruby-2.7.0/ruby/ruby.h:1837:5: note: expanded from macro 'RUBY_CONST_ID_CACHE'
    }
    ^
/Users/wonse/.rbenv/versions/2.7.2/include/ruby-2.7.0/ruby/ruby.h:2689:27: note: expanded from macro 'rb_funcall'
        rb_funcallv(recv, mid, \
                          ^~~
/Users/wonse/.rbenv/versions/2.7.2/include/ruby-2.7.0/ruby/ruby.h:1012:14: note: expanded from macro 'RSTRING_PTR'
     RSTRING(str)->as.heap.ptr)
             ^~~
/Users/wonse/.rbenv/versions/2.7.2/include/ruby-2.7.0/ruby/ruby.h:1271:39: note: expanded from macro 'RSTRING'
#define RSTRING(obj) (R_CAST(RString)(obj))
                                      ^~~
posix-spawn.c:465:91: note: ')' token is here
                rb_raise(rb_eArgError, "Invalid option: %s", RSTRING_PTR(rb_inspect(rb_funcall(options, rb_intern("first"), 0))));
                                                                                                        ^~~~~~~~~~~~~~~~~~
/Users/wonse/.rbenv/versions/2.7.2/include/ruby-2.7.0/ruby/ruby.h:1847:56: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                                                       ^
/Users/wonse/.rbenv/versions/2.7.2/include/ruby-2.7.0/ruby/ruby.h:2689:27: note: expanded from macro 'rb_funcall'
        rb_funcallv(recv, mid, \
                          ^~~
/Users/wonse/.rbenv/versions/2.7.2/include/ruby-2.7.0/ruby/ruby.h:1012:14: note: expanded from macro 'RSTRING_PTR'
     RSTRING(str)->as.heap.ptr)
             ^~~
/Users/wonse/.rbenv/versions/2.7.2/include/ruby-2.7.0/ruby/ruby.h:1271:39: note: expanded from macro 'RSTRING'
#define RSTRING(obj) (R_CAST(RString)(obj))
                                      ^~~
37 warnings generated.
linking shared-object posix_spawn_ext.bundle

current directory: /Users/wonse/Downloads/hydejack-starter-kit-9.1.6/vendor/bundle/ruby/2.7.0/gems/posix-spawn-0.3.15/ext
make "DESTDIR=" install
/usr/bin/install -c -m 0755 posix_spawn_ext.bundle ./.gem.20220321-13832-16j7347
